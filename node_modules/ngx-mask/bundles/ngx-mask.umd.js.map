{"version":3,"file":"ngx-mask.umd.js.map","sources":["ng://ngx-mask/app/ngx-mask/config.ts","node_modules/tslib/tslib.es6.js","ng://ngx-mask/app/ngx-mask/mask-applier.service.ts","ng://ngx-mask/app/ngx-mask/mask.service.ts","ng://ngx-mask/app/ngx-mask/mask.directive.ts","ng://ngx-mask/app/ngx-mask/mask.pipe.ts","ng://ngx-mask/app/ngx-mask/ngx-mask.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n    sufix: string;\n    prefix: string;\n    clearIfNotMatch: boolean;\n    showTemplate: boolean;\n    showMaskTyped: boolean;\n    shownMaskExpression: string;\n    dropSpecialCharacters: boolean | string[];\n    specialCharacters: string[];\n    patterns: {\n        [character: string]: {\n            pattern: RegExp;\n            optional?: boolean;\n        };\n    };\n}\n\nexport type optionsConfig = Partial<IConfig>;\nexport const config: InjectionToken<string> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n    sufix: '',\n    prefix: '',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    dropSpecialCharacters: true,\n    shownMaskExpression: '',\n    // tslint:disable-next-line: quotemark\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d')\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]')\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]')\n        },\n        d: {\n            pattern: new RegExp('\\\\d')\n        },\n        m: {\n            pattern: new RegExp('\\\\d')\n        },\n        M: {\n            pattern: new RegExp('\\\\d')\n        },\n        H: {\n            pattern: new RegExp('\\\\d')\n        },\n        h: {\n            pattern: new RegExp('\\\\d')\n        },\n        s: {\n            pattern: new RegExp('\\\\d')\n        }\n    }\n};\n\nexport const withoutValidation: string[] = [\n    'percent',\n    'Hh:m0:s0',\n    'Hh:m0',\n    'Hh',\n    'm0:s0',\n    's0',\n    'm0',\n    'separator',\n    'dot_separator',\n    'comma_separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0'\n];\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\nimport { config, IConfig } from './config';\n\n@Injectable()\nexport class MaskApplierService {\n    public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n    public showTemplate!: IConfig['showTemplate'];\n    public clearIfNotMatch!: IConfig['clearIfNotMatch'];\n    public maskExpression: string = '';\n    public shownMaskExpression: string = '';\n    public maskSpecialCharacters!: IConfig['specialCharacters'];\n    public maskAvailablePatterns!: IConfig['patterns'];\n    public prefix!: IConfig['prefix'];\n    public sufix!: IConfig['sufix'];\n    public customPattern!: IConfig['patterns'];\n\n    private _shift!: Set<number>;\n\n    public constructor(@Inject(config) protected _config: IConfig) {\n        this._shift = new Set();\n        this.maskSpecialCharacters = this._config!.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config!.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.sufix = this._config.sufix;\n    }\n    // tslint:disable-next-line:no-any\n    public applyMaskWithPattern(inputValue: string, maskAndPattern: [string, IConfig['patterns']]): string {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    public applyMask(\n        inputValue: string,\n        maskExpression: string,\n        position: number = 0,\n        cb: Function = () => {}\n    ): string {\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        let cursor: number = 0;\n        let result: string = ``;\n        let multi: boolean = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        const inputArray: string[] = inputValue.toString().split('');\n        if (maskExpression === 'percent') {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/]/)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            } else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        } else if (\n            maskExpression === 'separator' ||\n            maskExpression === 'dot_separator' ||\n            maskExpression.startsWith('dot_separator') ||\n            maskExpression === 'comma_separator' ||\n            maskExpression.startsWith('comma_separator')\n        ) {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-@#!$%^&*()_+|~=`{}\\[\\]:\";<>?\\/]/)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            const precision: number = this.getPrecision(maskExpression);\n            let strForSep: string;\n            if (maskExpression.startsWith('dot_separator')) {\n                inputValue =\n                    inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== ','\n                        ? inputValue.slice(1, inputValue.length)\n                        : inputValue;\n            }\n            if (maskExpression.startsWith('comma_separator')) {\n                inputValue =\n                    inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== '.'\n                        ? inputValue.slice(1, inputValue.length)\n                        : inputValue;\n            }\n            if (maskExpression === 'separator') {\n                if (\n                    inputValue.includes(',') &&\n                    inputValue.endsWith(',') &&\n                    inputValue.indexOf(',') !== inputValue.lastIndexOf(',')\n                ) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n                if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:.\";<>?\\/]/)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n                strForSep = inputValue.replace(/\\s/g, '');\n                result = this.separator(strForSep, ' ', '.', precision);\n            } else if (maskExpression === 'dot_separator' || maskExpression.startsWith('dot_separator')) {\n                if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[@#!$%^&*()_+|~=`{}\\[\\]:\\s\";<>?\\/]/)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n                inputValue = this.checkInputPrecision(inputValue, precision, ',');\n                strForSep = inputValue.replace(/\\./g, '');\n                result = this.separator(strForSep, '.', ',', precision);\n            } else if (maskExpression === 'comma_separator' || maskExpression.startsWith('comma_separator')) {\n                inputValue = this.checkInputPrecision(inputValue, precision, '.');\n                strForSep = inputValue.replace(/\\,/g, '');\n                result = this.separator(strForSep, ',', '.', precision);\n            }\n            position = result.length + 1;\n            cursor = position;\n            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor)) ? inputArray.length : cursor;\n            this._shift.add(shiftStep + this.prefix.length || 0);\n        } else {\n            for (\n                // tslint:disable-next-line\n                let i: number = 0, inputSymbol: string = inputArray[0];\n                i < inputArray.length;\n                i++, inputSymbol = inputArray[i]\n            ) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                } else if (\n                    maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\n                ) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                } else if (\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor]) &&\n                    maskExpression[cursor + 1] === '*'\n                ) {\n                    result += inputSymbol;\n                    multi = true;\n                } else if (\n                    maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])\n                ) {\n                    result += inputSymbol;\n                    cursor += 3;\n                } else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'd') {\n                        if (Number(inputSymbol) > 3) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor - 1] === 'd') {\n                        if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 31) {\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        if (Number(inputSymbol) > 1) {\n                            result += 0;\n                            cursor += 1;\n                            const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                                ? inputArray.length\n                                : cursor;\n                            this._shift.add(shiftStep + this.prefix.length || 0);\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor - 1] === 'M') {\n                        if (Number(inputValue.slice(cursor - 1, cursor + 1)) > 12) {\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    const shiftStep: number = /\\*|\\?/g.test(maskExpression.slice(0, cursor))\n                        ? inputArray.length\n                        : cursor;\n                    this._shift.add(shiftStep + this.prefix.length || 0);\n                    i--;\n                } else if (\n                    this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor]] &&\n                    this.maskAvailablePatterns[maskExpression[cursor]].optional\n                ) {\n                    cursor++;\n                    i--;\n                } else if (\n                    this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi\n                ) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n            }\n        }\n        if (\n            result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1\n        ) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n\n        let shift: number = 1;\n        let newPosition: number = position + 1;\n\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n\n        cb(this._shift.has(position) ? shift : 0);\n        let res: string = `${this.prefix}${result}`;\n        res = this.sufix ? `${this.prefix}${result}${this.sufix}` : `${this.prefix}${result}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    public _findSpecialChar(inputSymbol: string): undefined | string {\n        const symbol: string | undefined = this.maskSpecialCharacters.find((val: string) => val === inputSymbol);\n        return symbol;\n    }\n\n    private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n        this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\n        return (\n            this.maskAvailablePatterns[maskSymbol] &&\n            this.maskAvailablePatterns[maskSymbol].pattern &&\n            this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol)\n        );\n    }\n\n    private separator = (str: string, char: string, decimalChar: string, precision: number) => {\n        str += '';\n        const x: string[] = str.split(decimalChar);\n        const decimals: string = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n        let res: string = x[0];\n        const rgx: RegExp = /(\\d+)(\\d{3})/;\n        while (rgx.test(res)) {\n            res = res.replace(rgx, '$1' + char + '$2');\n        }\n        if (precision === undefined) {\n            return res + decimals;\n        } else if (precision === 0) {\n            return res;\n        }\n        return res + decimals.substr(0, precision + 1);\n    };\n\n    private percentage = (str: string): boolean => {\n        return Number(str) >= 0 && Number(str) <= 100;\n    };\n\n    private getPrecision = (maskExpression: string): number => {\n        const x: string[] = maskExpression.split('.');\n        if (x.length > 1) {\n            return Number(x[x.length - 1]);\n        }\n        return Infinity;\n    };\n\n    private checkInputPrecision = (inputValue: string, precision: number, decimalMarker: string): string => {\n        if (precision < Infinity) {\n            let precisionRegEx: RegExp;\n\n            if (decimalMarker === '.') {\n                precisionRegEx = new RegExp(`\\\\.\\\\d{${precision}}.*$`);\n            } else {\n                precisionRegEx = new RegExp(`,\\\\d{${precision}}.*$`);\n            }\n\n            const precisionMatch: RegExpMatchArray | null = inputValue.match(precisionRegEx);\n            if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            } else if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        return inputValue;\n    };\n}\n","import { ElementRef, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\nimport { MaskApplierService } from './mask-applier.service';\n\n@Injectable()\nexport class MaskService extends MaskApplierService {\n    public maskExpression: string = '';\n    public isNumberValue: boolean = false;\n    public showMaskTyped: boolean = false;\n    public maskIsShown: string = '';\n    protected _formElement: HTMLInputElement;\n    // tslint:disable-next-line\n    public onChange = (_: any) => {};\n    public onTouch = () => {};\n    public constructor(\n        // tslint:disable-next-line\n        @Inject(DOCUMENT) private document: any,\n        @Inject(config) protected _config: IConfig,\n        private _elementRef: ElementRef,\n        private _renderer: Renderer2\n    ) {\n        super(_config);\n        this._formElement = this._elementRef.nativeElement;\n    }\n\n    public applyMask(\n        inputValue: string,\n        maskExpression: string,\n        position: number = 0,\n        cb: Function = () => {}\n    ): string {\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (!inputValue && this.showMaskTyped) {\n            return this.prefix + this.maskIsShown;\n        }\n        const result: string = super.applyMask(inputValue, maskExpression, position, cb);\n        if (/dot_separator\\.\\d{1,}/.test(this.maskExpression) === true && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== ',');\n        }\n        if ('dot_separator' === this.maskExpression && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== ',');\n        }\n        if (/comma_separator\\.\\d{1,}/.test(this.maskExpression) === true && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== '.');\n        }\n        if ('comma_separator' === this.maskExpression && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item: string) => item !== '.');\n        }\n        Array.isArray(this.dropSpecialCharacters)\n            ? this.onChange(this._removeMask(this._removeSufix(this._removePrefix(result)), this.dropSpecialCharacters))\n            : this.dropSpecialCharacters === true\n            ? this.onChange(\n                  this.isNumberValue\n                      ? Number(\n                            this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters)\n                        )\n                      : this._removeMask(\n                            this._removeSufix(this._removePrefix(result)),\n                            this.maskSpecialCharacters\n                        ).indexOf(',') !== -1\n                      ? this._removeMask(\n                            this._removeSufix(this._removePrefix(result)),\n                            this.maskSpecialCharacters\n                        ).replace(',', '.')\n                      : this._removeMask(this._removeSufix(this._removePrefix(result)), this.maskSpecialCharacters)\n              )\n            : this.onChange(this._removeSufix(this._removePrefix(result)));\n        let ifMaskIsShown: string = '';\n        if (!this.showMaskTyped) {\n            return result;\n        }\n        const resLen: number = result.length;\n        const prefNmask: string = this.prefix + this.maskIsShown;\n        ifMaskIsShown = prefNmask.slice(resLen);\n        return result + ifMaskIsShown;\n    }\n\n    public applyValueChanges(position: number = 0, cb: Function = () => {}): void {\n        const maskedInput: string | number = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\n        this._formElement.value = maskedInput;\n        if (this._formElement === this.document.activeElement) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    }\n\n    public showMaskInInput(): string {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            } else {\n                return this.shownMaskExpression;\n            }\n        } else if (this.showMaskTyped) {\n            return this.maskExpression.replace(/\\w/g, '_');\n        }\n        return '';\n    }\n\n    public clearIfNotMatchFn(): void {\n        if (this.clearIfNotMatch === true && this.maskExpression.length !== this._formElement.value.length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(this._formElement.value, this.maskExpression);\n        }\n    }\n\n    public set formElementProperty([name, value]: [string, string | boolean]) {\n        this._renderer.setProperty(this._formElement, name, value);\n    }\n\n    public checkSpecialCharAmount(mask: string): number {\n        const chars: string[] = mask.split('').filter((item: string) => this._findSpecialChar(item));\n        return chars.length;\n    }\n\n    private _removeMask(value: string, specialCharactersForRemove: string[]): string {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    }\n\n    private _removePrefix(value: string): string {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    }\n\n    private _removeSufix(value: string): string {\n        if (!this.sufix) {\n            return value;\n        }\n        return value ? value.replace(this.sufix, '') : value;\n    }\n\n    private _regExpForRemove(specialCharactersForRemove: string[]): RegExp {\n        return new RegExp(specialCharactersForRemove.map((item: string) => `\\\\${item}`).join('|'), 'gi');\n    }\n}\n","import { Directive, forwardRef, HostListener, Inject, Input } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { config, IConfig, withoutValidation } from './config';\n\n@Directive({\n    selector: '[mask]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => MaskDirective),\n            multi: true\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => MaskDirective),\n            multi: true\n        },\n        MaskService\n    ]\n})\nexport class MaskDirective implements ControlValueAccessor {\n    private _maskValue!: string;\n    private _inputValue!: string;\n    private _position: number | null = null;\n    // tslint:disable-next-line\n    private _start!: number;\n    private _end!: number;\n    private _code!: string;\n    // tslint:disable-next-line\n    public onChange = (_: any) => {};\n    public onTouch = () => {};\n\n    public constructor(\n        // tslint:disable-next-line\n        @Inject(DOCUMENT) private document: any,\n        private _maskService: MaskService\n    ) {}\n\n    @Input('mask')\n    public set maskExpression(value: string) {\n        this._maskValue = value || '';\n        if (!this._maskValue) {\n            return;\n        }\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue);\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression)\n        ];\n    }\n\n    @Input()\n    public set specialCharacters(value: IConfig['specialCharacters']) {\n        if (!value || !Array.isArray(value) || (Array.isArray(value) && !value.length)) {\n            return;\n        }\n        this._maskService.maskSpecialCharacters = value;\n    }\n\n    @Input()\n    public set patterns(value: IConfig['patterns']) {\n        if (!value) {\n            return;\n        }\n        this._maskService.maskAvailablePatterns = value;\n    }\n\n    @Input()\n    public set prefix(value: IConfig['prefix']) {\n        if (!value) {\n            return;\n        }\n        this._maskService.prefix = value;\n    }\n\n    @Input()\n    public set sufix(value: IConfig['sufix']) {\n        if (!value) {\n            return;\n        }\n        this._maskService.sufix = value;\n    }\n\n    @Input()\n    public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\n        this._maskService.dropSpecialCharacters = value;\n    }\n\n    @Input()\n    public set showMaskTyped(value: IConfig['showMaskTyped']) {\n        if (!value) {\n            return;\n        }\n        this._maskService.showMaskTyped = value;\n    }\n\n    @Input()\n    public set shownMaskExpression(value: IConfig['shownMaskExpression']) {\n        if (!value) {\n            return;\n        }\n        this._maskService.shownMaskExpression = value;\n    }\n\n    @Input()\n    public set showTemplate(value: IConfig['showTemplate']) {\n        this._maskService.showTemplate = value;\n    }\n\n    @Input()\n    public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\n        this._maskService.clearIfNotMatch = value;\n    }\n\n    public validate({ value }: FormControl): ValidationErrors | null {\n        if (\n            /dot_separator\\.\\d{1,}/.test(this._maskValue) === true ||\n            /comma_separator\\.\\d{1,}/.test(this._maskValue) === true\n        ) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (value && value.toString().length >= 1) {\n            let counterOfOpt: number = 0;\n            for (const key in this._maskService.maskAvailablePatterns) {\n                if (\n                    this._maskService.maskAvailablePatterns[key].optional &&\n                    this._maskService.maskAvailablePatterns[key].optional === true\n                ) {\n                    if (this._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this._maskValue.indexOf(key) !== -1 && value.length >= this._maskValue.indexOf(key)) {\n                        return null;\n                    }\n                }\n            }\n            if (this._maskValue.indexOf('*') === 1) {\n                return null;\n            } else if (this._maskValue.indexOf('*') > 1 && value.length < this._maskValue.indexOf('*')) {\n                return { 'Mask error': true };\n            }\n            if (this._maskValue.indexOf('*') === -1) {\n                const length: number =\n                    this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt;\n                if (value.length !== length) {\n                    return { 'Mask error': true };\n                }\n            }\n        }\n        return null;\n    }\n\n    @HostListener('input', ['$event'])\n    public onInput(e: KeyboardEvent): void {\n        const el: HTMLInputElement = e.target as HTMLInputElement;\n        this._inputValue = el.value;\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        const position: number =\n            el.selectionStart === 1\n                ? (el.selectionStart as number) + this._maskService.prefix.length\n                : (el.selectionStart as number);\n        let caretShift: number = 0;\n        this._maskService.applyValueChanges(position, (shift: number) => (caretShift = shift));\n        // only set the selection if the element is active\n        if (this.document.activeElement !== el) {\n            return;\n        }\n        el.selectionStart = el.selectionEnd =\n            this._position !== null\n                ? this._position\n                : position +\n                  // tslint:disable-next-line\n                  (this._code === 'Backspace' ? 0 : caretShift);\n        this._position = null;\n    }\n\n    @HostListener('blur')\n    public onBlur(): void {\n        this._maskService.clearIfNotMatchFn();\n        this.onTouch();\n    }\n\n    @HostListener('click', ['$event'])\n    public onFocus(e: MouseEvent | KeyboardEvent): void {\n        const el: HTMLInputElement = e.target as HTMLInputElement;\n        const posStart: number = 0;\n        const posEnd: number = 0;\n        if (\n            el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // tslint:disable-next-line\n            (e as any).keyCode !== 38)\n        // ) {\n        //     return;\n        // }\n        if (this._maskService.showMaskTyped) {\n            this._maskService.maskIsShown = this._maskService.showMaskInInput();\n             if (el.setSelectionRange) {\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n             }\n        }\n        el.value =\n            !el.value || el.value === this._maskService.prefix\n                ? this._maskService.prefix + this._maskService.maskIsShown\n                : el.value;\n        /** fix of cursor position with prefix when mouse click occur */\n        if (((el.selectionStart as number) || (el.selectionEnd as number)) <= this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n    }\n\n    @HostListener('keydown', ['$event'])\n    public a(e: KeyboardEvent): void {\n        this._code = e.code;\n        const el: HTMLInputElement = e.target as HTMLInputElement;\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8) {\n            if ( e.keyCode === 37 ) {\n                el.selectionStart = el.selectionEnd as number - 1;\n            }\n            if (\n                (el.selectionStart as number) <= this._maskService.prefix.length &&\n                (el.selectionEnd as number) <= this._maskService.prefix.length\n            ) {\n                e.preventDefault();\n            }\n            const cursorStart: number | null = el.selectionStart;\n            this.onFocus(e);\n            if (e.keyCode === 8 && cursorStart === 0 && el.selectionEnd === el.value.length) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 1;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n    }\n\n    @HostListener('paste')\n    public onPaste(): void {\n        this._position = Number.MAX_SAFE_INTEGER;\n    }\n\n    /** It writes the value in the input */\n    public async writeValue(inputValue: string): Promise<void> {\n        if (inputValue === undefined) {\n            inputValue = '';\n        }\n        if (typeof inputValue === 'number') {\n            inputValue = String(inputValue);\n            inputValue = this._maskValue.startsWith('dot_separator') ? inputValue.replace('.', ',') : inputValue;\n            this._maskService.isNumberValue = true;\n        }\n        (inputValue && this._maskService.maskExpression) ||\n        (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))\n            ? (this._maskService.formElementProperty = [\n                  'value',\n                  this._maskService.applyMask(inputValue, this._maskService.maskExpression)\n              ])\n            : (this._maskService.formElementProperty = ['value', inputValue]);\n        this._inputValue = inputValue;\n    }\n\n    // tslint:disable-next-line\n    public registerOnChange(fn: any): void {\n        this.onChange = fn;\n        this._maskService.onChange = this.onChange;\n    }\n\n    // tslint:disable-next-line\n    public registerOnTouched(fn: any): void {\n        this.onTouch = fn;\n    }\n\n    /** It disables the input element */\n    public setDisabledState(isDisabled: boolean): void {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    }\n\n    private _repeatPatternSymbols(maskExp: string): string {\n        return (\n            (maskExp.match(/{[0-9]+}/) &&\n                maskExp.split('').reduce((accum: string, currval: string, index: number): string => {\n                    this._start = currval === '{' ? index : this._start;\n\n                    if (currval !== '}') {\n                        return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n                    }\n                    this._end = index;\n                    const repeatNumber: number = Number(maskExp.slice(this._start + 1, this._end));\n                    const repaceWith: string = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\n                    return accum + repaceWith;\n                }, '')) ||\n            maskExp\n        );\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { MaskApplierService } from './mask-applier.service';\nimport { IConfig } from './config';\n\n@Pipe({\n    name: 'mask',\n    pure: true\n})\nexport class MaskPipe implements PipeTransform {\n    public constructor(private _maskService: MaskApplierService) {}\n\n    public transform(value: string | number, mask: string | [string, IConfig['patterns']]): string {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(`${value}`, mask);\n        }\n        return this._maskService.applyMaskWithPattern(`${value}`, mask);\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\nimport { MaskApplierService } from './mask-applier.service';\nimport { MaskDirective } from './mask.directive';\nimport { MaskPipe } from './mask.pipe';\n\n@NgModule({\n    providers: [MaskApplierService],\n    exports: [MaskDirective, MaskPipe],\n    declarations: [MaskDirective, MaskPipe]\n})\nexport class NgxMaskModule {\n    public static forRoot(configValue?: optionsConfig): ModuleWithProviders {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG]\n                }\n            ]\n        };\n    }\n    public static forChild(_configValue?: optionsConfig): ModuleWithProviders {\n        return {\n            ngModule: NgxMaskModule\n        };\n    }\n}\n\n/**\n * @internal\n */\nexport function _configFactory(\n    initConfig: optionsConfig,\n    configValue: optionsConfig | (() => optionsConfig)\n): Function | optionsConfig {\n    return typeof configValue === 'function' ? configValue() : { ...initConfig, ...configValue };\n}\n"],"names":["InjectionToken","Injectable","Inject","tslib_1.__extends","DOCUMENT","ElementRef","Renderer2","Directive","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Input","HostListener","Pipe","NgModule"],"mappings":"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"}
